name: 'Assemble Android'
description: 'Assemble apk or appbundle'
inputs:
  build_type:
    description: 'appbundle или apk'
    required: true
    default: appbundle
  build_mode:
    description: 'release, profile или debug'
    required: true
    default: release
  flavor:
    description: 'prod, dev, stage'
    required: true
    default: prod
  custom_target:
    description: 'custom build target( если не определить, то будет создан из flavor)'
    required: false
  decript_key:
    description: 'ANDROID_KEYS_SECRET_PASSPHRASE'
    required: false
  secrets_path:
    description: 'path to gpg file'
    default: 'android/keys/android_keys.zip.gpg'
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    - name: Decrypt Android keys
      if: ${{ inputs.decript_key }}
      run: |
        gpg --quiet --batch --yes --decrypt --passphrase=${{ inputs.decript_key }} \
       --output android/android_keys.zip  ${{ inputs.secrets_path }} && cd android && jar xvf android_keys.zip && cd -
      shell: bash

    - name: Assemble
      run: |
        result_target=${{ inputs.custom_target }} \
        if [[ -z "$result_target" ]] \
        then \
         result_target=lib/targets/${{ inputs.flavor }}.dart \
        fi \
        mode="$(tr -s "[:upper:]" "[:lower:]" <<<${{ inputs.build_mode }})" \
        echo -n "Build flavor:${{ inputs.flavor }}  type:${{ inputs.build_type }} target $result_target mode $mode" \
        flutter build ${{ inputs.build_type }} -t $result_target --flavor ${{ inputs.flavor }} --$mode
      shell: bash