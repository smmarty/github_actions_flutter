name: 'Assemble Android V2'
description: 'Assemble apk or appbundle'
inputs:
  build_type:
    description: 'appbundle или apk'
    required: true
    default: appbundle
  build_mode:
    description: 'release, profile или debug'
    required: true
    default: release
  flavor:
    description: 'prod, dev, stage'
    required: false
  file_prefix:
    description: 'prefix to file'
    required: false
  custom_target:
    description: 'custom build target( если не определить, то будет создан из flavor)'
    required: false
  decript_key:
    description: 'ANDROID_KEYS_SECRET_PASSPHRASE'
    required: false
  secrets_path:
    description: 'path to gpg file'
    default: 'android/keys/android_keys.zip.gpg'
    required: false
  obfuscate:
    description: 'Будет использовано --obfuscate и данные --split-debug-info будут загружены в github artifacts'
    default: 'false'
    required: false
  dart_define:
    description: 'Переопределяет все что будет в --dart-define=. Аргументы передаем в виде key=value,key2=value2'
    required: false
  rename_file:
    description: 'Переименовывает output file'
    default: 'true'
    required: false
outputs:
  app-version:
    description: "App Version x.y.z+b"
    value: ${{ steps.app-version.outputs.app-version }}
  build-file:
    description: "Path to result file"
    value: ${{ steps.file-path.outputs.file-path }}
  debug-info-path:
    description: "Path to debug-info-folder"
    value: ${{ steps.assemble.outputs.debug_info_path }}
  debug-info-artifact-name:
    description: "debug-info-artifact-name"
    value: ${{ steps.assemble.outputs.debug-info-artifact-name }}
  ext:
    description: "file extension"
    value: ${{ steps.file-ext.outputs.ext }}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Decrypt Android keys
      if: ${{ inputs.decript_key }}
      shell: bash
      run: gpg --quiet --batch --yes --passphrase=${{ inputs.decript_key }} --output android/android_keys.zip --decrypt ${{ inputs.secrets_path }} && cd android && jar xvf android_keys.zip && cd -

    - name: Get app version
      id: app-version
      if: ${{ success() }}
      uses: smmarty/github_actions_flutter/actions/app_version@main

    - name: Assemble
      id: assemble
      shell: bash
      run: |
        CMD_ARGS=""
        custom_target=${{ inputs.custom_target }}
        if [ ${{ inputs.obfuscate }} == true ]; then 
          mkdir debug_info
          DEBUG_DIR="debug_info"
          echo "debug_info_path=$DEBUG_DIR" >> $GITHUB_OUTPUT
          echo "debug-info-artifact-name='debug-info-${{ steps.assemble.outputs.app-version }}'" >> $GITHUB_OUTPUT
          CMD_ARGS="$CMD_ARGS --obfuscate --split-debug-info=$DEBUG_DIR"
        fi
        if [ ${{ inputs.flavor }} != null ]; then 
          CMD_ARGS="$CMD_ARGS --flavor ${{ inputs.flavor }}" 
          if [ -z "$custom_target"]; then 
           echo "Set custom target from flavor"
          CMD_ARGS="$CMD_ARGS -t lib/targets/${{ inputs.flavor }}.dart"
          fi
        fi
        if [ -n "$custom_target" ]; then 
         echo "Set custom target from inputs.custom_target"
         CMD_ARGS="$CMD_ARGS -t ${{ inputs.custom_target }}"
        fi
        date=$(date +"%d-%m-%Y")
        DART_DEFINE_ARGS=" --dart-define=buildDate=$date"
        if [ ${{ inputs.dart_define }} != null ]; then   
         echo "Set dart_define values"
         dart_define_values="${{ inputs.dart_define }}"
         IFS=',' read -r -a dart_define_array <<< "$dart_define_values"
         for element in "${dart_define_array[@]}"
         do
           echo "dart_define add ${element}"
           DART_DEFINE_ARGS="$DART_DEFINE_ARGS --dart-define=${element}"
         done
        fi
        CMD_ARGS="$CMD_ARGS $DART_DEFINE_ARGS"
        echo $CMD_ARGS
        flutter build ${{ inputs.build_type }} $CMD_ARGS --${{ inputs.build_mode }}

    - name: Get file ext
      id: file-ext
      shell: bash
      run: |
        if [[ ${{ inputs.build_type }} == "apk" ]]
        then
          echo "ext=apk" >> $GITHUB_OUTPUT
          echo "dir=build/app/outputs/*/*/*" >> $GITHUB_OUTPUT
        else
          echo "ext=aab" >> $GITHUB_OUTPUT
          echo "dir=build/app/outputs/*/*" >> $GITHUB_OUTPUT
        fi    

    - name: Rename file
      id: file-path
      if: ${{ success() &&  inputs.rename_file == 'true' }}
      uses: smmarty/github_actions_flutter/actions/rename_file_v2@main
      with:
        source_file_path: ${{ steps.file-ext.outputs.dir }}/app-${{ inputs.flavor }}-${{ inputs.build_mode }}.${{ steps.file-ext.outputs.ext }}
        file_suffix: ${{ steps.app-version.outputs.app-version }}
        file_prefix: ${{ inputs.file_prefix }}


    - name: Upload to artifacts
      uses: actions/upload-artifact@v3
      if: ${{ inputs.obfuscate }}
      with:
        name: 'debug-info-${{ steps.assemble.outputs.app-version }}'
        path: 'debug_info'
        retention-days: 5

